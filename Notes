

TODOs:
* check loss function calculation - should it be like the linear model's loss function? (adding gradient multiplication)

* check values of q function -- does it reach nan values because it gets too big?

* what else can you take from the linear model?

* check the useful sources for useful code

* find a way to use decay on learning rate while having constant MIN learning rate


* if we're score_scope away from the end - stop exploration to maximize results



USEFUL SOURCES:
https://github.com/keon/deep-q-learning/blob/master/dqn.py

https://github.com/keon/deep-q-learning

